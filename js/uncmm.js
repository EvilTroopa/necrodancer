var wavesurfer;var beats = [];var iCountdown = 0;var iTimeoutId;var iMode = 0;var pixPerSec = 128;var markWidth = 4;var test = "0.49300000071525574-1.8799999952316284-3.4159998893737793-5.0370001792907715-6.5520000457763672-8.1730003356933594-9.7089996337890625-11.265999794006348-12.845000267028809-14.444999694824219-16.00200080871582-17.601999282836914-19.117000579833984-19.607999801635742-20.760000228881836-22.232000350952148-23.788999557495117-25.368000030517578-25.857999801635742-26.305999755859375-26.924999237060547-27.416000366210937-27.841999053955078-28.482000350952148-28.972999572753906-29.441999435424805-30.082000732421875-30.572999954223633-30.978000640869141-31.597000122070312-32.088001251220703-32.535999298095703-33.217998504638672-33.645000457763672-34.092998504638672-34.754001617431641-35.2239990234375-35.650001525878906-36.333000183105469-36.801998138427734-37.229000091552734-37.911998748779297-38.338001251220703-39.469001770019531-39.916999816894531-41.005001068115234-41.452999114990234-42.583999633789063-43.053001403808594-44.140998840332031-44.610000610351563-45.676998138427734-46.167999267578125-47.234001159667969-47.703998565673828-48.791999816894531-49.304000854492188-50.412998199462891-50.924999237060547-51.992000579833984-52.46099853515625-53.506000518798828-53.976001739501953-55.084999084472656-55.597000122070313-56.599998474121094-57.090000152587891-58.200000762939453-58.668998718261719-59.756999969482422-60.226001739501953-61.292999267578125-61.805000305175781-62.872001647949219-63.404998779296875-64.472000122070313-64.984001159667969-66.008003234863281-66.498001098632812-67.56500244140625-68.01300048828125-69.165000915527344-69.655998229980469-70.082000732421875-70.700996398925781-71.169998168945313-71.575996398925781-72.21600341796875-72.706001281738281-73.176002502441406-73.816001892089844-74.285003662109375-74.7969970703125-75.373001098632812-75.863998413085938-76.972999572753906-77.420997619628906-78.46600341796875-78.977996826171875-80.066001892089844-80.536003112792969-81.644996643066406-82.113998413085938-83.2239990234375-83.693000793457031-84.737998962402344-85.272003173828125-86.317001342773438-86.786003112792969-87.916999816894531-88.364997863769531-89.4530029296875-89.944000244140625-90.988998413085938-91.543998718261719-92.525001525878906-93.037002563476563-94.146003723144531-94.615997314453125-95.681999206542969-96.152000427246094-96.621002197265625-97.004997253417969-97.324996948242188-97.793998718261719-98.241996765136719-98.561996459960938-98.882003784179688-99.288002014160156-99.777999877929688-100.07700347900391-100.41799926757812-100.88800048828125-101.33599853515625-101.63400268554687-101.97599792480469-102.48799896240234-102.87200164794922-103.23400115966797-103.51200103759766-104.00199890136719-104.47200012207031-104.79199981689453-105.08999633789062-105.55999755859375-105.98600006103516-106.30599975585937-106.66899871826172-107.09600067138672-107.56500244140625-107.88500213623047-108.20500183105469-108.67400360107422-109.16500091552734-109.46399688720703-109.78399658203125-110.20999908447266-110.72200012207031-111.04199981689453-111.36199951171875-111.76799774169922-112.25800323486328-112.55699920654297-112.94100189208984-113.34600067138672-113.81600189208984-114.13600158691406-114.45600128173828-114.92500305175781-115.41600036621094-115.77799987792969-116.03399658203125-116.50399780273437-116.93099975585937-117.25099945068359-117.54900360107422-118.01799774169922-118.50900268554687-118.84999847412109-119.14900207519531-119.61799621582031-120.08799743652344-120.34400177001953-120.70600128173828-121.19699859619141-121.66600036621094-121.98600006103516-122.28500366210937-122.71199798583984-123.18099975585937-123.50099945068359-123.82099914550781-124.29100036621094-124.69599914550781-124.99400329589844-125.22899627685547-125.697998046875-126.125-126.76499938964844-127.27700042724609-127.59700012207031-127.91699981689453-128.23699951171875-128.70599365234375-129.13299560546875-129.4320068359375-129.75199890136719-130.22099304199219-130.64799499511719-130.90400695800781-131.2239990234375-131.64999389648437-132.07699584960937-132.44000244140625-132.75999450683594-133.22900390625-133.54899597167969-133.84800720214844-134.125-134.593994140625-135.08500671386719-135.40499877929687-135.70399475097656-136.19400024414062-136.66400146484375-136.96200561523437-137.28300476074219-137.68800354003906-138.22099304199219-138.54100036621094-138.83999633789062-139.26600646972656-139.80000305175781-140.05599975585937-140.37600708007812-140.88800048828125-141.35699462890625-141.656005859375-141.95399475097656-142.44500732421875-142.91400146484375-143.21299743652344-143.49099731445312-144.00300598144531-144.47200012207031-144.72799682617187-145.11199951171875-145.58099365234375-146.00799560546875-146.3280029296875-146.64799499511719-147.05299377441406-147.56500244140625-147.88499450683594-148.20500183105469-148.67500305175781-149.10099792480469-149.42100524902344-149.80499267578125-150.29600524902344-150.72300720214844-150.93600463867187-151.36300659179687-151.85299682617187-152.25799560546875-152.5780029296875-152.89799499511719-153.36799621582031-153.83700561523438-154.13600158691406-154.45599365234375-154.94599914550781-155.37300109863281-155.73599243164062-155.99200439453125-156.46099853515625-157.01600646972656-157.29299926757812-157.57000732421875-158.03999328613281-158.50900268554687-158.85099792480469-159.14900207519531-159.61799621582031-160.08799743652344-160.40800476074219-160.70599365234375-161.19700622558594-161.66600036621094-161.98599243164062-162.26400756835937-162.73300170898437-163.18099975585937-163.56500244140625-163.88499450683594-164.31199645996094-164.781005859375-165.08000183105469-165.42100524902344-165.82600402832031-166.33799743652344-166.61599731445312-166.97799682617187-167.40499877929687-167.87399291992187-168.21600341796875-168.51400756835937-168.98399353027344-169.4530029296875-169.77299499511719-170.07200622558594-170.54100036621094-171.03199768066406-171.35200500488281-171.6929931640625-172.1199951171875-172.54600524902344-172.92999267578125-173.22900390625-173.74099731445312-174.14599609375-174.44500732421875-174.76499938964844-175.23399353027344-175.63999938964844-176.02400207519531-176.343994140625-176.77099609375-177.26100158691406-177.55999755859375-177.9010009765625-178.39199829101562-178.86099243164062-179.16000366210937-179.47999572753906-179.99200439453125-180.39700317382812-180.71699523925781-181.01600646972656-181.48500061035156-181.95399475097656-182.33799743652344-182.593994140625-183.02099609375-183.49099731445312-183.83200073242187-184.13099670410156-184.60000610351562-185.04800415039063-185.36799621582031-185.68800354003906-187.2449951171875-187.73599243164062-188.20500183105469-188.48199462890625-188.80299377441406-189.27200317382812-189.76199340820312-190.08299255371094-190.38099670410156-190.89300537109375-191.32000732421875-191.63999938964844-191.93800354003906-192.45100402832031-192.85600280761719-193.17599487304687-193.49600219726562-194.00799560546875-194.43400573730469-194.73300170898437-195.05299377441406-195.52200317382812-196.05599975585937-196.33299255371094-196.65299987792969-197.10099792480469-197.59199523925781-197.91200256347656-198.27400207519531-198.63699340820312-199.14900207519531-199.42599487304687-199.72500610351562-200.21600341796875-200.70599365234375-201.30400085449219-201.81599426269531-202.26400756835937-202.90400695800781-203.35200500488281-203.80000305175781-204.46099853515625-204.95199584960937-205.37800598144531-206.01800537109375-206.50900268554687-206.93600463867187-207.61799621582031-208.06599426269531-208.51400756835937-209.11199951171875-209.62399291992187-210.09300231933594-210.3489990234375-210.71200561523437-211.2030029296875-211.6719970703125-211.92799377441406-212.28999328613281-212.71699523925781-213.14399719238281-213.50599670410156-213.80499267578125-214.25300598144531-214.61599731445312-214.93600463867187-215.23399353027344-215.72500610351562-216.13099670410156-216.45100402832031-216.85600280761719-217.26100158691406-217.60200500488281-217.94400024414062-218.24200439453125-218.71200561523437-219.11700439453125-219.50100708007812-219.77799987792969-220.20500183105469-220.5679931640625-220.88800048828125-221.18600463867187-221.63400268554687-222.08299255371094-222.33799743652344-222.67999267578125-223.12800598144531-223.61799621582031-223.91700744628906-224.17300415039062";test = test.split('-');for(var i = 0; i < test.length ; i++){	console.log(test[i] + " "+ test[i].length);}var markColor = "#FFF";$(document).ready(function(){	var dropZone = document.getElementById('dropSong');		dropZone.addEventListener("dragenter", dragEnter, false);	dropZone.addEventListener("dragexit", dragExit, false);	dropZone.addEventListener("dragover", dragOver, false);	dropZone.addEventListener("drop", doDrop, false);		wavesurfer = WaveSurfer.create({		container: '#trackVisualisation',		waveColor: 'red',		progressColor: 'purple'	});	$( "#accordion" ).accordion({      collapsible: true,      active: false,      heightStyle: 'content'    });		$('#btnMode0').click(function(){		iMode = 0;		$('#selectMode').hide();		$('#trackControlsMode0').show();	});	$('#btnMode1').click(function(){		iMode = 1;		$('#selectMode').hide();		$('#trackControlsMode1').show();		wavesurfer.on('mark', function(){document.getElementById('audioTick').play();});		initMarkersMode1();	});	$('#tempo').on('change drag input', function(){		var tempo = $(this).val();		$('#tempoNum').val(tempo);		updateMarkersMode1();	});	$('#tempoNum').val($('#tempo').val());	$('#offset').on('change drag input', function(){		var offset = $(this).val();		$('#offsetNum').val(offset);		updateMarkersMode1();	});	$('#offsetNum').val($('#offset').val());	$('#tempoNum').on('change drag input blur', function(){		var tempo = $(this).val();		if(!isNaN(tempo)){			$('#tempo').val(tempo);			updateMarkersMode1();		}	});	$('#offsetNum').on('change drag input blur', function(){		var offset = $(this).val();		if(!isNaN(offset)){			$('#offset').val(offset);			updateMarkersMode1();		}	});});function dragOver(e){	e.preventDefault();	e.stopPropagation();}function dragExit(e){	$('#dropSong').removeClass('hover');	e.preventDefault();	e.stopPropagation();}function dragEnter(e){	$('#dropSong').addClass('hover');	e.preventDefault();	e.stopPropagation();}function doDrop(e){	e.preventDefault();	e.stopPropagation();	$('#dropSong').removeClass('hover');	var dt = e.dataTransfer;	if(dt.files.length > 1){		alert('Can I haz 1 file at a time plz?');		return;	}	initDropSurfer();	$('#trackName0').val(dt.files[0].name);	$('#trackName1').val(dt.files[0].name);	wavesurfer.loadBlob(dt.files[0]);}function initDropSurfer(){	$('#trackVisualisation').show();			/* Progress bar */	(function () {		var progressDiv = $('#progressBar');		var progressBar = progressDiv.find('.progressBar');		var showProgress = function (percent) {			progressDiv.show();			progressBar.css('width', percent + '%');		};		var doError = function () {			progressDiv.hide();			$('#trackVisualisation').hide();			alert('Wrong type of file !');		};		wavesurfer.on('loading', showProgress);		wavesurfer.on('ready', doSelect);		wavesurfer.on('destroy', doError);		wavesurfer.on('error', doError);		wavesurfer.on('play', doStart);		wavesurfer.on('finish', doFinish);	}());		$('#trackVisualisation').append('<input id="beatInput" />');		$('#btnRecord0').click(function(){		$(this).prop('disabled', true);		$('#btnExport0').prop('disabled', true);		iCountdown = 3;		countdown();	});	$('#btnStop0').click(function(){		wavesurfer.stop();		doFinish();	});	$('#btnExport0').click(function(){		if(beats.length > 0){			var beatsFileData = beats.map(function(region){return region.start.toString().substring(0,10)}).join("\n");			download('beats.txt', beatsFileData);		}	});		$('#btnPlay1').click(function(){		$(this).prop('disabled', true);		$('#btnStop1').prop('disabled', false);		$('#tempo').prop('disabled', true);		$('#offset').prop('disabled', true);		wavesurfer.play();	});	$('#btnStop1').click(function(){		$(this).prop('disabled', true);		$('#btnPlay1').prop('disabled', false);		$('#tempo').prop('disabled', false);		$('#offset').prop('disabled', false);		wavesurfer.stop();	});	}var setAndReady = false;function doSelect(){	console.log('do select');	$('#trackTitle').html($('#trackName0').val());	$('#progressBar').hide();	$('#trackVisualisation').removeClass('empty');	$('#trackDuration1').val(wavesurfer.getDuration());	$('#selectMode').show();	wavesurfer.zoom(100);	wavesurfer.enableDragSelection();	if(!setAndReady){		$('#beatInput').on('keydown', function(event){			if((event.which | event.keyCode) != 13){				var fCurrTime = wavesurfer.getCurrentTime();				var region = {					start: fCurrTime, // time in seconds					end: fCurrTime+0.04, // time in seconds					color: 'hsla(100, 100%, 100%, 0.7)',					resize: false				}				wavesurfer.addRegion(region);				beats.push(region);				console.log('added one beat. Total is '+beats.length);			}else{				console.log('stop !');				$('#btnStop0').trigger('click');			}			return false;		});		wavesurfer.on('region-dblclick',function(region){			var regionInArray = $.grep(beats, function(e){ return e.start == region.start; })[0];			var indexOfRegion = beats.indexOf(regionInArray);			console.log(region);			console.log(regionInArray);			console.log(indexOfRegion + " will be removed.");			beats.splice(indexOfRegion,1);			wavesurfer.clearRegions();			beats.map(function(reg){wavesurfer.addRegion(reg);})			console.log('removed beat : ' + region.start);			console.log('now '+ beats.length+' beats');			region = null;			setAndReady = true;		})	}}function doStart(){	$('#beatInput').on('blur', function(event){		$(this).focus();	});}function doFinish(){	$('#btnStop0').prop('disabled', true);	$('#btnRecord0').prop('disabled', false);	$('#btnExport0').prop('disabled', false);	console.log("Stopped. Now " + beats.length + " beats ")}function download(filename, text) {	var pom = document.createElement('a');	pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));	pom.setAttribute('download', filename);	if (document.createEvent) {		var event = document.createEvent('MouseEvents');		event.initEvent('click', true, true);		pom.dispatchEvent(event);	}	else {		pom.click();	}}function countdown(){	if($('#countdown')) $('#countdown').remove();	iCountdown--;	if(iCountdown > 0){		$('body').append('<div id="countdown">' + iCountdown + '</div>');		$('#countdown').animate({opacity: 0}, 400);		$('#beatInput').focus();		iTimeoutId = setTimeout(countdown, 1000);	}else{		$('#btnStop0').prop('disabled', false);		wavesurfer.playPause();	}}function initMarkersMode1(){	var duration = wavesurfer.getDuration();	var offset = parseFloat($('#offset').val());	var tempo = parseFloat($('#tempo').val());	var beatDuration = 60 / tempo;		var numBeats = parseInt((duration - offset) / beatDuration);	var fCurrTime = offset;		for(var i = 0; i < numBeats; i++){		wavesurfer.mark({position: fCurrTime, color: markColor, id: 'mark_' + i});		fCurrTime += beatDuration;	}}function updateMarkersMode1(){	var duration = wavesurfer.getDuration();	var offset = parseFloat($('#offset').val());	var tempo = parseFloat($('#tempo').val());	var beatDuration = 60.0 / tempo;	var cssLeftRatio = pixPerSec * beatDuration * 2;		var numBeats = parseInt((duration - offset) / beatDuration);		var lastMark = $('#trackVisualisation > wave > mark:last');	var lastMarkId = parseInt(lastMark.attr('id').replace('mark_', ''));		var maxIdToUpdate = lastMarkId;	if(numBeats < lastMarkId){		maxIdToUpdate = numBeats;		for(var i = numBeats + 1; i <= lastMarkId; i++){			wavesurfer.markers['mark_' + i].remove();		}	}		var fCurrTime = offset;	var markWidthOffset = markWidth / 2;	for(var i = 0; i <= maxIdToUpdate; i++){		try{			wavesurfer.markers['mark_' + i].position = fCurrTime;			wavesurfer.markers['mark_' + i].percentage = fCurrTime / duration;		}catch(e){			wavesurfer.mark({id: 'mark_' + i, position: fCurrTime, color: markColor});		}		$('#mark_' + i).attr('title', fCurrTime);		$('#mark_' + i).css({left: parseInt(fCurrTime * cssLeftRatio - markWidthOffset) + 'px'})		fCurrTime += beatDuration;	}	if(numBeats > maxIdToUpdate){		for(var i = maxIdToUpdate + 1; i <= numBeats; i++){			wavesurfer.mark({id: 'mark_' + i, position: fCurrTime, color: markColor});			fCurrTime += beatDuration;		}	}}